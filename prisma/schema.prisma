// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

/// the admin that assigns a room to the student  and overlooks the application
model admin {
  id        String   @id @default(uuid()) @map("_id")
  fullname  String
  email     String 
  password  String
  telephone String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model student {
  studentId String   @id @default(uuid()) @map("_id")
  profile   String
  fullName  String
  email     String?
  password  String
  gender    String   @unique
  level     Int
  telephone String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  department                  department?     @relation(fields: [departmentId], references: [id])
  departmentId                String?         @db.ObjectId
  roomAssignment              roomAssignment? @relation(fields: [roomAssignmentAssigmentCode], references: [assigmentCode])
  roomAssignmentAssigmentCode String?
}

model roomAssignment {
  assigmentCode String    @id @map("_id")
  occupant      student[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model block {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  blockname       blockname
  totalRooms      Int
  occupancyStatus String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  floor           floor[]
}

model floor {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  status  status
  rooms   rooms[]
  block   block?  @relation(fields: [blockId], references: [id])
  blockId String? @db.ObjectId
}

model rooms {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  roomnumber Int    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  floor   floor?  @relation(fields: [floorId], references: [id])
  floorId String? @db.ObjectId
}

model department {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  student   student[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum blockname {
  A
  B
  C
  D
}

enum status {
  Vacant
  Occupied
  Partially_Occupied
}
