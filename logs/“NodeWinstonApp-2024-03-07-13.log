2024-03-07T13:01:09.171Z [31merror[39m:	
Invalid `prisma.rooms.findMany()` invocation in
/home/sam/Documents/Allprojects/HallManagementSystem/src/controllers/room.js:107:38

  104 exports.getRoomsByStatus = async (req, res, next) => {
  105   try {
  106     const { status } = req.params;
â†’ 107     const rooms = await prisma.rooms.findMany({
            where: {
              status: 'Partially_occupied'
                      ~~~~~~~~~~~~~~~~~~~~
            }
          })

Argument status: Got invalid value 'Partially_occupied' on prisma.findManyrooms. Provided String, expected EnumstatusFilter or status:
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}


2024-03-07T13:13:55.561Z [31merror[39m:	
Invalid `prisma.rooms.findMany()` invocation in
/home/sam/Documents/Allprojects/HallManagementSystem/src/controllers/room.js:107:38

  104 exports.getRoomsByStatus = async (req, res, next) => {
  105   try {
  106     const { status } = req.params;
â†’ 107     const rooms = await prisma.rooms.findMany({
            where: {
              status: 'w'
                      ~~~
            }
          })

Argument status: Got invalid value 'w' on prisma.findManyrooms. Provided String, expected EnumstatusFilter or status:
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}


2024-03-07T13:14:41.088Z [31merror[39m:	
Invalid `prisma.rooms.findMany()` invocation in
/home/sam/Documents/Allprojects/HallManagementSystem/src/controllers/room.js:107:38

  104 exports.getRoomsByStatus = async (req, res, next) => {
  105   try {
  106     const { status } = req.params;
â†’ 107     const rooms = await prisma.rooms.findMany({
            where: {
              status: 'w'
                      ~~~
            }
          })

Argument status: Got invalid value 'w' on prisma.findManyrooms. Provided String, expected EnumstatusFilter or status:
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}


2024-03-07T13:14:42.779Z [31merror[39m:	
Invalid `prisma.rooms.findMany()` invocation in
/home/sam/Documents/Allprojects/HallManagementSystem/src/controllers/room.js:107:38

  104 exports.getRoomsByStatus = async (req, res, next) => {
  105   try {
  106     const { status } = req.params;
â†’ 107     const rooms = await prisma.rooms.findMany({
            where: {
              status: 'w'
                      ~~~
            }
          })

Argument status: Got invalid value 'w' on prisma.findManyrooms. Provided String, expected EnumstatusFilter or status:
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}


2024-03-07T13:14:47.841Z [31merror[39m:	
Invalid `prisma.rooms.findMany()` invocation in
/home/sam/Documents/Allprojects/HallManagementSystem/src/controllers/room.js:107:38

  104 exports.getRoomsByStatus = async (req, res, next) => {
  105   try {
  106     const { status } = req.params;
â†’ 107     const rooms = await prisma.rooms.findMany({
            where: {
              status: 'w'
                      ~~~
            }
          })

Argument status: Got invalid value 'w' on prisma.findManyrooms. Provided String, expected EnumstatusFilter or status:
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}


2024-03-07T13:15:48.271Z [31merror[39m:	
Invalid `prisma.rooms.findMany()` invocation in
/home/sam/Documents/Allprojects/HallManagementSystem/src/controllers/room.js:107:38

  104 exports.getRoomsByStatus = async (req, res, next) => {
  105   try {
  106     const { status } = req.params;
â†’ 107     const rooms = await prisma.rooms.findMany({
            where: {
              status: 'w'
                      ~~~
            }
          })

Argument status: Got invalid value 'w' on prisma.findManyrooms. Provided String, expected EnumstatusFilter or status:
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}
type EnumstatusFilter {
  equals?: status
  in?: List<status> | status
  notIn?: List<status> | status
  not?: status | NestedEnumstatusFilter
}


2024-03-07T13:20:21.654Z [31merror[39m:	400
2024-03-07T13:20:43.104Z [31merror[39m:	Please Enter the right option
2024-03-07T13:21:28.421Z [31merror[39m:	Please Enter the right option
2024-03-07T13:21:38.807Z [31merror[39m:	Please Enter the right option
2024-03-07T13:21:53.385Z [31merror[39m:	Please Enter the right option
